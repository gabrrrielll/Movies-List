{"version":3,"sources":["services/fakeMoviesService.js","components/common/Like.js","components/common/Pagination.js","components/common/Searchbar.js","components/Movies.js","utils/paginate.js","App.js","serviceWorker.js","index.js"],"names":["movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","liked","Like","props","onClick","classes","react_default","a","createElement","className","style","cursor","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","map","page","key","Searchbar","Fragment","type","placeholder","aria-label","onSearchEnter","Movies","state","inputTerm","handlePageChange","_this","setState","movie","this","prevState","filter","m","index","indexOf","_this2","_this$state","length","paginatedMovies","items","pageNumber","startIndex","lastIndex","slice","paginate","common_Searchbar","term","common_Like","handleLike","handleDelete","common_Pagination","Component","App","components_Movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3fc1e31.chunk.js","sourcesContent":["const movies = [\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd471815\",\r\n      title: \"Terminator\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n      numberInStock: 6,\r\n      dailyRentalRate: 2.5,\r\n      publishDate: \"2018-01-03T19:04:28.809Z\",\r\n      liked: true\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd471816\",\r\n      title: \"Die Hard\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n      numberInStock: 5,\r\n      dailyRentalRate: 2.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd471817\",\r\n      title: \"Get Out\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n      numberInStock: 8,\r\n      dailyRentalRate: 3.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd471819\",\r\n      title: \"Trip to Italy\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n      numberInStock: 7,\r\n      dailyRentalRate: 3.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n      title: \"Airplane\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n      numberInStock: 7,\r\n      dailyRentalRate: 3.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n      title: \"Wedding Crashers\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n      numberInStock: 7,\r\n      dailyRentalRate: 3.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n      title: \"Gone Girl\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n      numberInStock: 7,\r\n      dailyRentalRate: 4.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n      title: \"The Sixth Sense\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n      numberInStock: 4,\r\n      dailyRentalRate: 3.5\r\n    },\r\n    {\r\n      _id: \"5b21ca3eeb7f6fbccd471821\",\r\n      title: \"The Avengers\",\r\n      genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n      numberInStock: 7,\r\n      dailyRentalRate: 3.5\r\n    }\r\n  ];\r\n\r\n  export function getMovies(){\r\n    return movies;\r\n  }","import React from 'react';\r\n\r\nconst Like = (props) => {\r\n    const { liked, onClick } = props;\r\n\r\n    let classes = liked ? 'fa fa-heart' : 'fa fa-heart-o';\r\n    return (\r\n        <i className={ classes }\r\n            style={ { cursor: 'pointer' } }\r\n            onClick={ onClick } />\r\n     );\r\n}\r\n\r\nexport default Like;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                { pages.map(page =>\r\n                    <li key={page}\r\n                        className={ page === currentPage ? 'page-item active' : 'page-item' }\r\n                        onClick={ () => onPageChange(page) }\r\n                    >\r\n                    <a className=\"page-link\"> { page } </a></li>)}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\n\r\nconst Searchbar = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mb-4\">\r\n        <form className=\"form-inline my-2 my-lg-0 \">\r\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n\r\n          <button onClick={ props.onSearchEnter } className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Searchbar;","import React, { Component } from 'react';\r\nimport { getMovies } from '../services/fakeMoviesService';\r\nimport Like from './common/Like';\r\nimport Pagination from './common/Pagination';\r\nimport Searchbar from './common/Searchbar';\r\nimport { paginate } from '../utils/paginate';\r\n\r\nclass Movies extends Component {\r\n\r\n    state = {\r\n        movies: getMovies(),\r\n        pageSize: 4,\r\n        currentPage: 1,\r\n        inputTerm: '',\r\n    };\r\n\r\n\r\n    handleDelete(movie) {\r\n        this.setState( prevState => {\r\n            const movies = prevState.movies.filter(m => m._id !== movie._id);\r\n            return {\r\n                movies\r\n            }\r\n        });\r\n    }\r\n\r\n    handleLike(movie) {\r\n        this.setState( prevState => {\r\n            const movies = prevState.movies;\r\n            const index = movies.indexOf(movie);\r\n            movies[index].liked = !movies[index].liked;\r\n            return { movies };\r\n        });\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n     \r\n        this.setState({currentPage : page});\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pageSize, currentPage, movies } = this.state;\r\n\r\n        if (movies.length === 0) return <p className=\"text-warning\">There are no movies in the db</p>;\r\n\r\n        const paginatedMovies = paginate(movies, currentPage, pageSize);\r\n       \r\n\r\n        return (\r\n            <React.Fragment>\r\n            <p> There are {movies.length} movies in the DB.</p>\r\n            <Searchbar term={this.state.inputTerm}\r\n                        onSearchEnter={2}\r\n            />\r\n            <div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Genre</th>\r\n                            <th>Stock</th>\r\n                            <th>Rate</th>\r\n                            <th />\r\n                            <th />\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                     { paginatedMovies.map( movie => (\r\n                        <tr key={movie._id}>\r\n                            <td>{ movie.title }</td>\r\n                            <td>{ movie.genre.name }</td>\r\n                            <td>{ movie.numberInStock }</td>\r\n                            <td>{ movie.dailyRentalRate } </td>\r\n                            <td>\r\n                                <Like liked={ movie.liked }\r\n                                      onClick={ () => this.handleLike(movie) } />\r\n                            </td>\r\n                            <td>\r\n                                <button onClick={ () => this.handleDelete(movie) }\r\n                                        className=\"btn btn-danger btn-sm\">Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                     ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Pagination itemsCount={ movies.length }\r\n                        pageSize={ pageSize }\r\n                        currentPage={ currentPage }\r\n                        onPageChange={ this.handlePageChange }\r\n            />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Movies;","import _ from 'lodash';\r\n\r\nexport function paginate (items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  const lastIndex = pageSize * pageNumber;\r\n\r\n  return items.slice(startIndex, lastIndex);\r\n}","import React, { Component } from 'react';\nimport Movies from './components/Movies';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Movies />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}